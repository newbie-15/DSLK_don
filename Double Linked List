#include <stdio.h>
#include <stdlib.h>
struct node{
	int data;
	struct node *next;
	struct node *prev;
};
typedef struct node node;
int len(node *head){
	int cnt = 0;
	while(head != NULL){
		++cnt;
		head = head->next;
	}
	return cnt;
}
node *makeNode(int x){
	node *newNode = (node*)malloc(sizeof(node));
	newNode->data = x;
	newNode->next = newNode->prev = NULL;
	return newNode;
}
//them mot phan tu vao dau
void themdau(node **head, int x){
	node *newNode = makeNode(x);
	if(*head == NULL){
		(*head) = newNode;
		
	}
	else{
		newNode->next = (*head);
		(*head)->prev = newNode;
		(*head) = newNode;
		
	}
}
//Them phan tu vao cuoi
void themcuoi(node **head, int x){
	if(*head == NULL){
		themdau(head, x);
	}
	else{
		node *newNode = makeNode(x);
		node *tmp = (*head);
		while(tmp->next != NULL){
			tmp = tmp->next;
		}
		tmp->next = newNode;
		newNode->prev = tmp;
		tmp = newNode;
	}
}
//Them phan tu vao giua
void themgiua(node **head, int x, int k){
	int n = len(*head);
	if(k < 1 || k > n + 1){
		printf("Vi tri K khong hop le!\n");
		return;
	}
	else{
		node *newNode = makeNode(x);
		if(k == 1){
			newNode->next = (*head);
			if((*head) != NULL){
				(*head)->prev = newNode;
			}
			(*head) = newNode;
		}
		else{
			node *tmp = (*head);
			for(int i = 1; i <= k-1; i++){
				tmp = tmp->next;
			}
			if(tmp == NULL){
				themcuoi(head, x);
			}
			else{
				newNode->next = tmp;
				tmp->prev->next = newNode;
				newNode->prev = tmp->prev;
				tmp->prev = newNode;
			}
		}
	}
}
void xoadau(node **head){
	if(*head == NULL){
		printf("DSLK rong!\n");
	}
	else{
		if((*head)->next == NULL){
			(*head) = NULL;
		}
		else{
			node *delNode = (*head);
		(*head) = (*head)->next;
		if((*head)->prev != NULL){
			(*head)->prev = NULL;
		}
		free(delNode);
		}
	}
}
void xoacuoi(node **head){
	if(*head == NULL){
		printf("DSLK rong!\n");
		return;
	}
	else{
		node *tmp = (*head);
		while(tmp->next != NULL){
			tmp = tmp->next;
		}
		if(tmp->prev == NULL){
			(*head) = NULL;
		}
		else{
			node *delNode = tmp;
			tmp->prev->next = NULL;
			free(delNode);
		}
	}
}
void xoagiua(node **head, int k){
	int n = len(*head);
	if(k < 1 || k > n){
		printf("Vi tri can xoa khong hop le!\n");
		return;
	}
	else{
		if(k == 1){
			node *delNode = (*head);
			(*head) = (*head)->next;
			free(delNode);
		
		}
		else{
			node *tmp = (*head);
			for(int i = 1; i <= k-1; i++){
				tmp = tmp->next;
			}
			node *delNode = tmp;
			tmp->prev->next = tmp->next;
			if(tmp->next != NULL){
				tmp->next->prev = tmp->prev;
			}
			free(delNode);
		
		}
	}
}
void duyet(node *head){
	if(head == NULL){
		printf("Linked list empty\n");
	}
	else{
		node *tmp = head;
		printf("Linked list data : ");
		while(tmp != NULL){
			printf("%d ", tmp->data);
			tmp = tmp->next;
		}
		printf("\n");
	}
	
}
void duyetnguoc(node *head){
	if(head == NULL){
		printf("Double Linked List empty!\n");
	}
	else{
		node *tmp = head;
		while(tmp->next != NULL){
			tmp = tmp->next;
		}
		printf("Double Linked list data : ");
		while(tmp != NULL){ 
			printf("%d ", tmp->data);
			tmp = tmp->prev;
		}
		printf("\n");
		}
}
void sapxep(node **head){
	if(*head == NULL){
		printf("Sap xep DSLK khong thanh cong!\n");
	}
	else{
		for(node *i = *head; i != NULL; i=i->next){
		node *min = i;
		for(node *j = i->next; j != NULL; j = j->next){
			if(min->data > j->data){
				min = j;
			}
		}
		//swap data
		int tmp = min->data;
		min->data = i->data;
		i->data = tmp;
		}
		printf("Sap xep DSLK thanh cong!\n");
		duyet(*head);
	}
}
int main(){
	node *head = NULL;
	printf("Launch Double Linked List!\n");
	printf("Vui long nhap so luong phan tu cho DSLK : ");
	int n;
	scanf("%d", &n);
	for(int i = 1; i <= n; i++){
		int x;
		printf("Gia tri can them cho Node %d : ", i);
		scanf("%d", &x);
		themcuoi(&head, x);
	}
	printf("Khoi tao Double Linked List thanh cong!\n");
	duyet(head);
	while(1){
		printf("\n");
		printf("----------Double Linked List Operation----------\n");
		printf("1. Them mot phan tu vao dau.\n");
		printf("2. Them phan tu vao cuoi\n");
		printf("3. Them phan tu vao giua.\n");
		printf("4. Xoa node dau\n");
		printf("5. Xoa node cuoi\n");
		printf("6. Xoa node o giua.\n");
		printf("7. Duyet DSLK\n");
		printf("8. Duyet nguoc DSLK.\n");
		printf("9. Sap xep.\n");
		printf("0. Exit.\n");
		////Code
		printf("Vui long nhap : ");
		int x;
		scanf("%d", &x);
		if(x == 1){
			printf("Nhap gia tri can them : ");
			int z;
			scanf("%d", &z);
			themdau(&head, z);
			printf("Them Node thanh cong!\n");
			duyet(head);
		}
		else if(x == 2){
			printf("Nhap gia tri can them : ");
			int z;
			scanf("%d", &z);
			themcuoi(&head, z);
			printf("Them Node thanh cong!\n");
			duyet(head);
		}
		else if(x == 3){
			duyet(head);
			int z, k;
			printf("Nhap gia tri can them : ");
			scanf("%d", &z);
			printf("Nhap vi tri can chen : ");
			scanf("%d", &k);
			themgiua(&head, z, k);
			printf("Them node thanh cong!\n");
			duyet(head);
		}
		else if(x == 4){
			xoadau(&head);
			printf("Xoa node dau thanh cong!\n");
			duyet(head);
		}
		else if(x == 5){
			xoacuoi(&head);
			printf("Xoa Node cuoi thanh cong!\n");
			duyet(head);
		}
		else if(x == 6){
			duyet(head);
			int k;
			printf("Nhap vi tri can xoa : ");
			scanf("%d", &k);
			xoagiua(&head, k);
			printf("Xoa Node giua thanh cong!\n");
			duyet(head);
		}
		else if(x == 7){
			duyet(head);
		}
		else if(x == 8){
			duyetnguoc(head);
		}
		else if(x == 9){
			sapxep(&head);
		}
		else{
			break;
		}
	}
	return 0;
}
